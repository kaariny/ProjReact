{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Kariny Ara\\xFAjo\\\\Downloads\\\\projetoReact\\\\src\\\\Componentes\\\\Pesquisa\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { pets } from \"./dadosPesquisa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Pesquisa() {\n  _s();\n  const [petsPesquisadas, setPetsPesquisadas] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Encontre seu Pet agora:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"digite seu pr\\xF3ximo amigo \"\n      // evento do onBlur mudar a cor do input além de fazer a \n      // captura do conteudo pelo parametro do evento\n      ,\n      onBlur: evento => {\n        const textoDigitado = evento.target.value;\n        /*\r\n        retornar as vagas filtradas, o filtro ele recebe uma funcao para cada elemento da lista\r\n        se rertorna verdadeiros fica lista caso retorne falso ele nao entra na nossa lista\r\n        -- include-- verifica se nome digitado esta na lista \r\n        */\n        const resultadoPesquisa = pets.filter(pets => pets.titulo.includes(textoDigitado));\n        //salava a variavel no state \n        setPetsPesquisadas(resultadoPesquisa);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), petsPesquisadas.map(pets => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pets.titulo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(Pesquisa, \"kKYuZnT4kC96NwyFbQBXCFRoDE0=\");\n_c = Pesquisa;\nexport default Pesquisa;\nvar _c;\n$RefreshReg$(_c, \"Pesquisa\");","map":{"version":3,"names":["useState","pets","jsxDEV","_jsxDEV","Pesquisa","_s","petsPesquisadas","setPetsPesquisadas","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onBlur","evento","textoDigitado","target","value","resultadoPesquisa","filter","titulo","includes","map","_c","$RefreshReg$"],"sources":["C:/Users/Kariny Araújo/Downloads/projetoReact/src/Componentes/Pesquisa/index.js"],"sourcesContent":["import { useState } from \"react\"\r\nimport {pets} from \"./dadosPesquisa\"\r\n\r\nfunction Pesquisa(){\r\n    const [petsPesquisadas, setPetsPesquisadas] = useState([])\r\n  \r\n    return(\r\n        <section>\r\n            <h1>Encontre seu Pet agora:</h1>\r\n            <input\r\n                placeholder=\"digite seu próximo amigo \"\r\n                // evento do onBlur mudar a cor do input além de fazer a \r\n               // captura do conteudo pelo parametro do evento\r\n                onBlur={(evento=>{\r\n                    const textoDigitado = evento.target.value;\r\n                    /*\r\n                    retornar as vagas filtradas, o filtro ele recebe uma funcao para cada elemento da lista\r\n                    se rertorna verdadeiros fica lista caso retorne falso ele nao entra na nossa lista\r\n                    -- include-- verifica se nome digitado esta na lista \r\n                    */\r\n                    const resultadoPesquisa = pets.filter(pets => pets.titulo.includes(textoDigitado))\r\n                    //salava a variavel no state \r\n                    setPetsPesquisadas(resultadoPesquisa)\r\n                })}\r\n            ></input>\r\n            {/* utilizar o map para mostrar na tela a lista de vaga */}\r\n\r\n            {petsPesquisadas.map(pets=>(\r\n                <div>\r\n                    <p>{pets.titulo}</p>\r\n                </div>\r\n            ))\r\n\r\n            }\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Pesquisa"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAAQC,IAAI,QAAO,iBAAiB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,QAAQA,CAAA,EAAE;EAAAC,EAAA;EACf,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1D,oBACIG,OAAA;IAAAK,QAAA,gBACIL,OAAA;MAAAK,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCT,OAAA;MACIU,WAAW,EAAC;MACZ;MACD;MAAA;MACCC,MAAM,EAAGC,MAAM,IAAE;QACb,MAAMC,aAAa,GAAGD,MAAM,CAACE,MAAM,CAACC,KAAK;QACzC;AACpB;AACA;AACA;AACA;QACoB,MAAMC,iBAAiB,GAAGlB,IAAI,CAACmB,MAAM,CAACnB,IAAI,IAAIA,IAAI,CAACoB,MAAM,CAACC,QAAQ,CAACN,aAAa,CAAC,CAAC;QAClF;QACAT,kBAAkB,CAACY,iBAAiB,CAAC;MACzC;IAAG;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGRN,eAAe,CAACiB,GAAG,CAACtB,IAAI,iBACrBE,OAAA;MAAAK,QAAA,eACIL,OAAA;QAAAK,QAAA,EAAIP,IAAI,CAACoB;MAAM;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIG,CAAC;AAElB;AAACP,EAAA,CAlCQD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAoCjB,eAAeA,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}